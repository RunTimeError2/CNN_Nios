/*
 * CNN_recognition.h
 *
 *  Created on: 2018Äê7ÔÂ14ÈÕ
 *      Author: Song Jiahao
 */

#ifndef CNN_RECOGNITION_H_
#define CNN_RECOGNITION_H_

#define IMAGE_DIM 28
#define CONV_CORE_DIM 3
#define CONV_RANGE 1
#define CONV_MID 1
#define CONV1_OUT_DIM 8
#define CONV2_OUT_DIM 4
#define FC1_OUT_DIM 32
#define FC2_OUT_DIM 10

#define RELU(x) (((x)>0)?(x):(0))

double Input_Image[IMAGE_DIM][IMAGE_DIM];

double Conv1_W[CONV_CORE_DIM][CONV_CORE_DIM][1][CONV1_OUT_DIM];
double Conv1_B[CONV1_OUT_DIM] = {
	0.037722453475, 0.002797347261, 0.305463284254, 0.201481848955, 0.119835518301, 0.125280037522, 0.108334325254, 0.034626591951,
};
double Conv1_Image[IMAGE_DIM][IMAGE_DIM][CONV1_OUT_DIM];
double Pool1_Image[IMAGE_DIM / 2][IMAGE_DIM / 2][CONV1_OUT_DIM];

double Conv2_W[CONV_CORE_DIM][CONV_CORE_DIM][CONV1_OUT_DIM][CONV2_OUT_DIM];
double Conv2_B[CONV2_OUT_DIM] = {
	0.099538996816, 0.045513521880, 0.186764270067, 0.073189675808
};
double Conv2_Image[IMAGE_DIM / 2][IMAGE_DIM / 2][CONV2_OUT_DIM];
double Pool2_Image[IMAGE_DIM / 4][IMAGE_DIM / 4][CONV2_OUT_DIM];

double Flat_Image[(IMAGE_DIM / 4)*(IMAGE_DIM / 4)*CONV2_OUT_DIM];

double Fc1_W[(IMAGE_DIM / 4)*(IMAGE_DIM / 4)*CONV2_OUT_DIM][FC1_OUT_DIM];
double Fc1_B[FC1_OUT_DIM] = {
	0.085268668830, 0.104823432863, 0.094293154776, 0.116845712066, 0.092972017825, 0.093681968749, 0.069857798517, 0.101836457849, 0.075211443007, 0.109067849815, 0.112637236714, 0.094236835837, 0.128623679280, 0.058109421283, 0.103581912816, 0.096784077585, 0.093983590603, 0.126963421702, 0.100000001490, 0.187534689903, 0.076948776841, 0.161091834307, 0.110916681588, 0.131336808205, 0.117547012866, 0.072507366538, 0.048740513623, 0.067004226148, 0.079193867743, 0.147164106369, 0.094332851470, 0.131599575281
};
double FC1_Image[FC1_OUT_DIM];

double Fc2_W[FC1_OUT_DIM][FC2_OUT_DIM];
double Fc2_B[FC2_OUT_DIM] = {
	-0.036088421941, 0.312147021294, -0.109268501401, -0.145344331861, 0.349955409765, 0.041141033173, 0.159300595522, -0.013305801898, 0.197449177504, 0.236681833863
};
double FC2_Image[FC2_OUT_DIM];
int ans;

#include "para_conv1.h"
#include "para_conv2.h"
#include "para_fc1.h"
#include "para_fc2.h"
#include "data.h"

#include "Image_Buffer.h"

// Load all parameters and data
void Load_All();
// Convolution Layer 1 with relu
void Conv1();
// Max-pooling Layer 1
void MaxPool1();
// Convolution Layer 2 with relu
void Conv2();
// Max-pooling Layer 2
void MaxPool2();
// Flatten the image
void Flatten();
// FC Layer 1 with relu
void Fc1();
// FC Layer 2
void Fc2();
// Softmax and get the result
void Get_Answer();

int CNN_MNIST_recognition();

#endif /* CNN_RECOGNITION_H_ */
